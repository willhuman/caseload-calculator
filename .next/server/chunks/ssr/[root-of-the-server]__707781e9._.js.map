{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/WillM/Desktop/Caseload-calculator-git/caseload-calculator/src/components/Header.tsx"],"sourcesContent":["import Image from 'next/image';\n\nexport function Header() {\n  return (\n    <header className=\"w-full bg-nesso-card border-b border-black/5\">\n      <div className=\"container mx-auto max-w-4xl px-4 py-8\">\n        {/* Centered stack layout */}\n        <div className=\"text-center space-y-3\">\n          {/* Main title */}\n          <h1 className=\"text-2xl md:text-3xl font-semibold tracking-tight text-nesso-navy\">\n            Therapist Caseload Calculator\n          </h1>\n\n          {/* Powered by Nesso row - centered */}\n          <div className=\"flex justify-center items-center gap-2 text-sm text-nesso-ink/80\">\n            <span>Powered by</span>\n            <a\n              href=\"https://nessoapp.com\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              aria-label=\"Nesso\"\n              className=\"inline-flex items-center hover:opacity-80 transition-opacity\"\n            >\n              <Image\n                src=\"/assets/nesso-logo-real.svg\"\n                alt=\"\"\n                width={80}\n                height={20}\n                className=\"h-5\"\n              />\n            </a>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBAEb,cAAA,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAG,WAAU;kCAAoE;;;;;;kCAKlF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAK;;;;;;0CACN,8OAAC;gCACC,MAAK;gCACL,QAAO;gCACP,KAAI;gCACJ,cAAW;gCACX,WAAU;0CAEV,cAAA,8OAAC,wIAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ1B","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///Users/WillM/Desktop/Caseload-calculator-git/caseload-calculator/src/lib/calculations.ts"],"sourcesContent":["/**\n * Calculation utilities for the Therapist Caseload Calculator\n */\n\nexport interface CalculationInputs {\n  monthlyIncome: number;\n  sessionFee: number;\n  adminHours?: number; // Default: 6\n  documentationMinutesPerClient?: number; // Default: 20\n  cancellationRate?: number; // Default: 0.10 (10%)\n  capacityTarget?: number; // Auto-determined from income or set manually\n}\n\nexport interface CalculationResults {\n  // Core metrics\n  sessionsPerMonth: number;\n  sessionsPerWeek: number;\n  scheduledSessionsPerWeek: number;\n  attendedSessionsPerWeek: number;\n\n  // Hours breakdown\n  sessionHours: number;\n  docHours: number;\n  adminHours: number;\n  totalHours: number;\n\n  // Revenue\n  revenueMonthly: number;\n\n  // Capacity and wellness\n  capacityTarget: number;\n  caseloadRange: { low: number; high: number };\n\n  // Wellness checks\n  financialOK: boolean;\n  timeOK: boolean;\n  qualityOK: boolean;\n  overallLabel: 'sustainable' | 'challenging' | 'room-to-grow';\n  overallSnippet: string;\n\n  // Hours comparison\n  hoursLeft: number;\n  hoursOver: number;\n}\n\n// Constants\nconst WEEKS_PER_MONTH = 4.33;\nconst AVERAGE_SESSION_LENGTH_HOURS = 1.0;\nconst DEFAULT_ADMIN_HOURS = 6;\nconst DEFAULT_DOCUMENTATION_MINUTES = 20;\nconst DEFAULT_CANCELLATION_RATE = 0.10; // 10%\nconst HEALTHY_HOURS_THRESHOLD = 34; // Default healthy weekly hours threshold\n\nexport function calculateCaseload(inputs: CalculationInputs): CalculationResults {\n  // Apply defaults\n  const adminHours = inputs.adminHours ?? DEFAULT_ADMIN_HOURS;\n  const documentationMinutesPerClient = inputs.documentationMinutesPerClient ?? DEFAULT_DOCUMENTATION_MINUTES;\n  const cancellationRate = inputs.cancellationRate ?? DEFAULT_CANCELLATION_RATE;\n  const capacityTarget = inputs.capacityTarget ?? HEALTHY_HOURS_THRESHOLD;\n\n  const { monthlyIncome, sessionFee } = inputs;\n\n  // Step 1: Sessions per month = income รท session fee\n  const sessionsPerMonth = monthlyIncome / sessionFee;\n\n  // Step 2: Sessions per week = sessions per month รท 4.33\n  const sessionsPerWeek = sessionsPerMonth / WEEKS_PER_MONTH;\n\n  // Step 3: Scheduled sessions = sessions needed รท (1 - cancellation rate)\n  // If 10% cancel, we need to schedule more to ensure we get the sessions we need\n  const scheduledSessionsPerWeek = sessionsPerWeek / (1 - cancellationRate);\n\n  // Step 4: Attended sessions = what we actually need\n  const attendedSessionsPerWeek = sessionsPerWeek;\n\n  // Step 5: Calculate hours\n  const sessionHours = attendedSessionsPerWeek * AVERAGE_SESSION_LENGTH_HOURS;\n  const docHours = (attendedSessionsPerWeek * documentationMinutesPerClient) / 60;\n  const totalHours = sessionHours + docHours + adminHours;\n\n  // Step 6: Revenue (actual attended sessions)\n  const revenueMonthly = attendedSessionsPerWeek * sessionFee * WEEKS_PER_MONTH;\n\n  // Step 7: Caseload range (handle fractional clients)\n  const caseloadRange = getCaseloadRange(attendedSessionsPerWeek);\n\n  // Step 8: Wellness checks (updated threshold logic)\n  const financialOK = revenueMonthly >= monthlyIncome;\n  const timeOK = totalHours <= capacityTarget;\n  const qualityOK = financialOK && timeOK;\n\n  // Step 9: Overall label and snippet\n  const { overallLabel, overallSnippet } = getOverallAssessment(\n    financialOK,\n    timeOK,\n    totalHours,\n    capacityTarget\n  );\n\n  // Step 10: Hours comparison\n  const hoursLeft = Math.max(capacityTarget - totalHours, 0);\n  const hoursOver = Math.max(totalHours - capacityTarget, 0);\n\n  return {\n    sessionsPerMonth,\n    sessionsPerWeek,\n    scheduledSessionsPerWeek,\n    attendedSessionsPerWeek,\n    sessionHours,\n    docHours,\n    adminHours,\n    totalHours,\n    revenueMonthly,\n    capacityTarget,\n    caseloadRange,\n    financialOK,\n    timeOK,\n    qualityOK,\n    overallLabel,\n    overallSnippet,\n    hoursLeft,\n    hoursOver\n  };\n}\n\nfunction getCaseloadRange(clients: number): { low: number; high: number } {\n  const floor = Math.floor(clients);\n  const ceil = Math.ceil(clients);\n\n  // If very close to a whole number (within 0.1), show single number\n  if (clients - floor < 0.1 || ceil - clients < 0.1) {\n    const rounded = Math.round(clients);\n    return { low: rounded, high: rounded };\n  }\n\n  return { low: floor, high: ceil };\n}\n\nfunction getOverallAssessment(\n  financialOK: boolean,\n  timeOK: boolean,\n  totalHours: number,\n  capacityTarget: number\n): { overallLabel: 'sustainable' | 'challenging' | 'room-to-grow'; overallSnippet: string } {\n  // Sustainable: Both financial and time are OK\n  if (financialOK && timeOK) {\n    return {\n      overallLabel: 'sustainable',\n      overallSnippet: \"This plan is balanced across income and time. You're well positioned to sustain quality care.\"\n    };\n  }\n\n  // Room to Grow: Time OK but not meeting financial, or using <80% of capacity\n  if ((timeOK && !financialOK) || (financialOK && totalHours <= capacityTarget * 0.8)) {\n    return {\n      overallLabel: 'room-to-grow',\n      overallSnippet: 'You have capacity to expand. You could take on more clients or explore higher fees if it feels right.'\n    };\n  }\n\n  // Challenging: Everything else (over capacity or not meeting goals)\n  return {\n    overallLabel: 'challenging',\n    overallSnippet: 'This plan may be difficult to sustain. Consider adjusting your fees or reducing cancellations.'\n  };\n}\n\nexport function formatCurrency(amount: number): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(amount);\n}\n\nexport function formatRange(low: number, high: number, suffix = ''): string {\n  return low === high ? `${low}${suffix}` : `${low}-${high}${suffix}`;\n}\n\nexport function formatPercentage(decimal: number): string {\n  return `${Math.round(decimal * 100)}%`;\n}"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;AA2CD,YAAY;AACZ,MAAM,kBAAkB;AACxB,MAAM,+BAA+B;AACrC,MAAM,sBAAsB;AAC5B,MAAM,gCAAgC;AACtC,MAAM,4BAA4B,MAAM,MAAM;AAC9C,MAAM,0BAA0B,IAAI,yCAAyC;AAEtE,SAAS,kBAAkB,MAAyB;IACzD,iBAAiB;IACjB,MAAM,aAAa,OAAO,UAAU,IAAI;IACxC,MAAM,gCAAgC,OAAO,6BAA6B,IAAI;IAC9E,MAAM,mBAAmB,OAAO,gBAAgB,IAAI;IACpD,MAAM,iBAAiB,OAAO,cAAc,IAAI;IAEhD,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG;IAEtC,oDAAoD;IACpD,MAAM,mBAAmB,gBAAgB;IAEzC,wDAAwD;IACxD,MAAM,kBAAkB,mBAAmB;IAE3C,yEAAyE;IACzE,gFAAgF;IAChF,MAAM,2BAA2B,kBAAkB,CAAC,IAAI,gBAAgB;IAExE,oDAAoD;IACpD,MAAM,0BAA0B;IAEhC,0BAA0B;IAC1B,MAAM,eAAe,0BAA0B;IAC/C,MAAM,WAAW,AAAC,0BAA0B,gCAAiC;IAC7E,MAAM,aAAa,eAAe,WAAW;IAE7C,6CAA6C;IAC7C,MAAM,iBAAiB,0BAA0B,aAAa;IAE9D,qDAAqD;IACrD,MAAM,gBAAgB,iBAAiB;IAEvC,oDAAoD;IACpD,MAAM,cAAc,kBAAkB;IACtC,MAAM,SAAS,cAAc;IAC7B,MAAM,YAAY,eAAe;IAEjC,oCAAoC;IACpC,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,GAAG,qBACvC,aACA,QACA,YACA;IAGF,4BAA4B;IAC5B,MAAM,YAAY,KAAK,GAAG,CAAC,iBAAiB,YAAY;IACxD,MAAM,YAAY,KAAK,GAAG,CAAC,aAAa,gBAAgB;IAExD,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;AAEA,SAAS,iBAAiB,OAAe;IACvC,MAAM,QAAQ,KAAK,KAAK,CAAC;IACzB,MAAM,OAAO,KAAK,IAAI,CAAC;IAEvB,mEAAmE;IACnE,IAAI,UAAU,QAAQ,OAAO,OAAO,UAAU,KAAK;QACjD,MAAM,UAAU,KAAK,KAAK,CAAC;QAC3B,OAAO;YAAE,KAAK;YAAS,MAAM;QAAQ;IACvC;IAEA,OAAO;QAAE,KAAK;QAAO,MAAM;IAAK;AAClC;AAEA,SAAS,qBACP,WAAoB,EACpB,MAAe,EACf,UAAkB,EAClB,cAAsB;IAEtB,8CAA8C;IAC9C,IAAI,eAAe,QAAQ;QACzB,OAAO;YACL,cAAc;YACd,gBAAgB;QAClB;IACF;IAEA,6EAA6E;IAC7E,IAAI,AAAC,UAAU,CAAC,eAAiB,eAAe,cAAc,iBAAiB,KAAM;QACnF,OAAO;YACL,cAAc;YACd,gBAAgB;QAClB;IACF;IAEA,oEAAoE;IACpE,OAAO;QACL,cAAc;QACd,gBAAgB;IAClB;AACF;AAEO,SAAS,eAAe,MAAc;IAC3C,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;QACV,uBAAuB;QACvB,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAEO,SAAS,YAAY,GAAW,EAAE,IAAY,EAAE,SAAS,EAAE;IAChE,OAAO,QAAQ,OAAO,GAAG,MAAM,QAAQ,GAAG,GAAG,IAAI,CAAC,EAAE,OAAO,QAAQ;AACrE;AAEO,SAAS,iBAAiB,OAAe;IAC9C,OAAO,GAAG,KAAK,KAAK,CAAC,UAAU,KAAK,CAAC,CAAC;AACxC","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///Users/WillM/Desktop/Caseload-calculator-git/caseload-calculator/src/components/ScenarioCard.tsx"],"sourcesContent":["import { CalculationResults, formatCurrency, formatRange } from '@/lib/calculations';\n\ninterface ScenarioCardProps {\n  title: string;\n  results: CalculationResults;\n  showRaisedFeeAdvice?: boolean;\n  onEmailClick: () => void;\n}\n\nexport function ScenarioCard({ title, results, showRaisedFeeAdvice = false, onEmailClick }: ScenarioCardProps) {\n  const sessionPercentage = Math.min((results.sessionHours / results.capacityTarget) * 100, 100);\n  const docPercentage = Math.min((results.docHours / results.capacityTarget) * 100, 100 - sessionPercentage);\n  const adminPercentage = Math.min((results.adminHours / results.capacityTarget) * 100, 100 - sessionPercentage - docPercentage);\n\n  return (\n    <div className=\"bg-nesso-card rounded-2xl ring-1 ring-black/5 shadow-sm p-6 space-y-6\">\n      {/* Title */}\n      <h3 className=\"text-xl font-semibold text-nesso-navy\">{title}</h3>\n\n      {/* Metrics */}\n      <div className=\"space-y-4\">\n        <div>\n          <div className=\"text-sm text-nesso-ink/60 mb-1\">Caseload needed</div>\n          <div className=\"text-2xl font-semibold text-nesso-navy\">\n            {formatRange(results.caseloadRange.low, results.caseloadRange.high)} clients/week\n          </div>\n        </div>\n\n        <div>\n          <div className=\"text-sm text-nesso-ink/60 mb-1\">Time commitment per week</div>\n          <div className=\"text-xl font-semibold text-nesso-navy\">{results.totalHours.toFixed(1)}h</div>\n          <div className=\"text-xs text-nesso-ink/60\">\n            Sessions {results.sessionHours.toFixed(1)}h โข Documentation {results.docHours.toFixed(1)}h โข Admin {results.adminHours.toFixed(1)}h\n          </div>\n        </div>\n\n        <div>\n          <div className=\"text-sm text-nesso-ink/60 mb-1\">Monthly revenue</div>\n          <div className=\"text-xl font-semibold text-nesso-navy\">{formatCurrency(results.revenueMonthly)}</div>\n        </div>\n      </div>\n\n      {/* Goal Bar */}\n      <div className=\"space-y-3\">\n        <div className=\"relative w-full\">\n          <div className=\"relative w-full h-8 overflow-hidden\">\n            {/* Base track */}\n            <div className=\"absolute inset-0 bg-nesso-navy/10 rounded-md\" />\n\n            {/* Progress fill */}\n            <div className=\"relative h-full flex overflow-hidden rounded-md\">\n              {/* Sessions segment */}\n              <div\n                className=\"bg-nesso-coral flex items-center justify-center text-black text-xs font-medium\"\n                style={{ width: `${(results.sessionHours / results.capacityTarget) * 100}%` }}\n                title={`Sessions: ${results.sessionHours.toFixed(1)}h`}\n              >\n                <span className=\"hidden md:block text-xs font-medium truncate px-1\">\n                  {results.sessionHours > 3 && sessionPercentage > 15 ? `Sessions ${results.sessionHours.toFixed(1)}h` : ''}\n                </span>\n              </div>\n\n              {/* Documentation segment */}\n              <div\n                className=\"bg-nesso-purple flex items-center justify-center text-white text-xs font-medium\"\n                style={{ width: `${(results.docHours / results.capacityTarget) * 100}%` }}\n                title={`Documentation: ${results.docHours.toFixed(1)}h`}\n              >\n                <span className=\"hidden md:block text-xs font-medium truncate px-1\">\n                  {results.docHours > 2 && docPercentage > 12 ? `Docs ${results.docHours.toFixed(1)}h` : ''}\n                </span>\n              </div>\n\n              {/* Admin segment */}\n              <div\n                className=\"bg-nesso-navy flex items-center justify-center text-white text-xs font-medium\"\n                style={{ width: `${(results.adminHours / results.capacityTarget) * 100}%` }}\n                title={`Admin: ${results.adminHours.toFixed(1)}h`}\n              >\n                <span className=\"hidden md:block text-xs font-medium truncate px-1\">\n                  {results.adminHours > 2 && adminPercentage > 12 ? `Admin ${results.adminHours.toFixed(1)}h` : ''}\n                </span>\n              </div>\n            </div>\n\n            {/* Overflow indicator */}\n            {results.hoursOver > 0 && (\n              <div\n                className=\"absolute top-0 bg-red-500 h-full flex items-center justify-center text-white text-xs font-medium rounded-r-md\"\n                style={{\n                  left: '100%',\n                  width: `${Math.min((results.hoursOver / results.capacityTarget) * 100, 50)}%`,\n                }}\n                title={`Over goal by ${results.hoursOver.toFixed(1)}h`}\n              >\n                <span className=\"text-xs font-medium px-1\">Over</span>\n              </div>\n            )}\n          </div>\n\n          {/* Edge labels */}\n          <div className=\"flex justify-between items-center mt-1\">\n            <div className=\"text-xs text-nesso-ink/60\">0h</div>\n            <div className=\"text-xs text-nesso-ink/60\">Goal: {results.capacityTarget}h</div>\n          </div>\n\n          {/* Status message */}\n          <div className=\"mt-2 text-xs text-nesso-ink/60\">\n            {results.hoursOver > 0 && `${results.hoursOver.toFixed(1)}h over`}\n            {results.hoursLeft > 0 && `${results.hoursLeft.toFixed(1)}h available`}\n          </div>\n\n          {/* Footnote */}\n          <div className=\"mt-3 text-xs text-nesso-ink/60\">\n            Includes 20 minutes per client per week for documentation\n          </div>\n        </div>\n      </div>\n\n      {/* Wellness Checks */}\n      <div className=\"space-y-3 pt-3 border-t border-nesso-navy/10\">\n        <div className=\"text-sm font-medium text-nesso-navy\">Wellness checks</div>\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-4 h-4 rounded flex items-center justify-center ${results.financialOK ? 'bg-green-100' : 'bg-gray-100'}`}>\n              {results.financialOK && (\n                <svg className=\"w-3 h-3 text-green-700\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n            </div>\n            <span className=\"text-sm text-nesso-ink\">Financial wellness</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-4 h-4 rounded flex items-center justify-center ${results.timeOK ? 'bg-green-100' : 'bg-gray-100'}`}>\n              {results.timeOK && (\n                <svg className=\"w-3 h-3 text-green-700\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n            </div>\n            <span className=\"text-sm text-nesso-ink\">Time balance</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-4 h-4 rounded flex items-center justify-center ${results.qualityOK ? 'bg-green-100' : 'bg-gray-100'}`}>\n              {results.qualityOK && (\n                <svg className=\"w-3 h-3 text-green-700\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n            </div>\n            <span className=\"text-sm text-nesso-ink\">Quality care</span>\n          </div>\n        </div>\n\n        {/* Overall assessment */}\n        <div className=\"pt-2\">\n          <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n            results.overallLabel === 'sustainable' ? 'bg-blue-100 text-blue-800' :\n            results.overallLabel === 'room-to-grow' ? 'bg-green-100 text-green-800' :\n            'bg-red-100 text-red-800'\n          }`}>\n            {results.overallLabel === 'sustainable' && 'Sustainable'}\n            {results.overallLabel === 'room-to-grow' && 'Room to Grow'}\n            {results.overallLabel === 'challenging' && 'Challenging'}\n          </div>\n          <p className=\"mt-2 text-sm text-nesso-ink/80\" aria-live=\"polite\">\n            {results.overallSnippet}\n          </p>\n        </div>\n      </div>\n\n      {/* Raised fee advice */}\n      {showRaisedFeeAdvice && (\n        <div className=\"pt-3 border-t border-nesso-navy/10\">\n          <div className=\"bg-nesso-purple/5 rounded-lg p-4 space-y-2\">\n            <p className=\"text-sm text-nesso-navy font-medium\">About raising fees</p>\n            <p className=\"text-sm text-nesso-ink/80 leading-relaxed\">\n              We know raising fees can feel uncomfortable. It&apos;s a sensitive conversation with your clients, but it can also be an important step for your sustainability. A few gentle ways to approach it:\n            </p>\n            <ul className=\"text-sm text-nesso-ink/80 space-y-1 pl-4 list-disc\">\n              <li>Start with new clients firstโkeep existing clients at their current rate until you feel ready.</li>\n              <li>When talking with current clients, give them notice well in advance. They&apos;ll appreciate your thoughtfulness: \"I will be adjusting my fee in two months. I wanted to give you time to prepare.\"</li>\n              <li>Keep it simpleโyou don&apos;t need to over-explain. A clear, confident statement usually works best.</li>\n            </ul>\n          </div>\n        </div>\n      )}\n\n      {/* CTA */}\n      <div className=\"pt-2\">\n        <button\n          onClick={onEmailClick}\n          className=\"w-full px-4 py-2.5 text-sm rounded-lg bg-nesso-coral hover:bg-nesso-coral/90 text-black font-medium transition-colors focus:ring-2 focus:ring-nesso-coral\"\n        >\n          Email me this plan\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"sources":["file:///Users/WillM/Desktop/Caseload-calculator-git/caseload-calculator/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///Users/WillM/Desktop/Caseload-calculator-git/caseload-calculator/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,yKAAmB;QAClB,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":["file:///Users/WillM/Desktop/Caseload-calculator-git/caseload-calculator/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 863, "column": 0}, "map": {"version":3,"sources":["file:///Users/WillM/Desktop/Caseload-calculator-git/caseload-calculator/src/app/review/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Header } from '@/components/Header';\nimport { ScenarioCard } from '@/components/ScenarioCard';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { calculateCaseload, formatCurrency, formatPercentage, formatRange, getDefaultCapacityTarget } from '@/lib/calculations';\n\ninterface PlanState {\n  monthlyIncome: number;\n  sessionFee: number;\n  adminHours: number;\n  documentationMinutesPerClient: number;\n  cancellationRate: number;\n  capacityTarget: number;\n}\n\nexport default function ReviewPage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const [planState, setPlanState] = useState<PlanState | null>(null);\n  const [isEmailModalOpen, setIsEmailModalOpen] = useState(false);\n  const [selectedScenario, setSelectedScenario] = useState<'scenario1' | 'scenario2' | 'all' | null>(null);\n\n  // Initialize from URL params\n  useEffect(() => {\n    const income = parseFloat(searchParams.get('income') || '0');\n    const fee = parseFloat(searchParams.get('fee') || '0');\n\n    if (income > 0 && fee > 0) {\n      const capacityTarget = getDefaultCapacityTarget(income);\n\n      setPlanState({\n        monthlyIncome: income,\n        sessionFee: fee,\n        adminHours: 6, // Default\n        documentationMinutesPerClient: 20, // Default\n        cancellationRate: 0.10, // 10% default\n        capacityTarget\n      });\n    } else {\n      // Invalid params, redirect to plan\n      router.push('/plan');\n    }\n  }, [searchParams, router]);\n\n  const handleAdjustGoals = () => {\n    if (!planState) return;\n\n    const params = new URLSearchParams({\n      income: planState.monthlyIncome.toString(),\n      fee: planState.sessionFee.toString()\n    });\n\n    router.push(`/plan?${params.toString()}`);\n  };\n\n  // Debounced update for assumptions\n  const updateAssumption = useCallback((updates: Partial<PlanState>) => {\n    setPlanState(prev => prev ? { ...prev, ...updates } : null);\n  }, []);\n\n  const handleEmailScenario = (scenario: 'scenario1' | 'scenario2' | 'all') => {\n    setSelectedScenario(scenario);\n    setIsEmailModalOpen(true);\n  };\n\n  if (!planState) {\n    return (\n      <div className=\"min-h-screen bg-nesso-bg flex items-center justify-center\">\n        <div className=\"flex flex-col items-center space-y-4\">\n          <div className=\"w-12 h-12 border-4 border-nesso-peach/20 border-t-nesso-peach rounded-full animate-spin\"></div>\n          <p className=\"text-nesso-ink/60\">Loading your plan...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Calculate Scenario 1: Your plan (base)\n  const scenario1Results = calculateCaseload({\n    monthlyIncome: planState.monthlyIncome,\n    sessionFee: planState.sessionFee,\n    adminHours: planState.adminHours,\n    documentationMinutesPerClient: planState.documentationMinutesPerClient,\n    cancellationRate: planState.cancellationRate,\n    capacityTarget: planState.capacityTarget\n  });\n\n  // Calculate Scenario 2: Raised fee (+10%)\n  const scenario2Results = calculateCaseload({\n    monthlyIncome: planState.monthlyIncome,\n    sessionFee: planState.sessionFee * 1.10,\n    adminHours: planState.adminHours,\n    documentationMinutesPerClient: planState.documentationMinutesPerClient,\n    cancellationRate: planState.cancellationRate,\n    capacityTarget: planState.capacityTarget\n  });\n\n  const capacityLabel = planState.capacityTarget === 40 ? 'Full Time (40h/week)' : 'Part Time (20h/week)';\n\n  return (\n    <div className=\"min-h-screen bg-nesso-bg flex flex-col\">\n      <Header />\n\n      <main className=\"flex-1 container mx-auto max-w-7xl px-4 py-12 space-y-12\">\n        {/* Header */}\n        <section className=\"text-center space-y-4\">\n          <h1 className=\"text-3xl md:text-4xl font-semibold tracking-tight text-nesso-navy\">\n            Your caseload plan\n          </h1>\n        </section>\n\n        {/* Top Summary Cards */}\n        <section className=\"max-w-4xl mx-auto\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-nesso-card rounded-xl ring-1 ring-black/5 p-6\">\n              <h3 className=\"text-sm font-medium text-nesso-ink/60 mb-2\">Weekly caseload needed</h3>\n              <div className=\"text-3xl font-semibold text-nesso-navy\">\n                {formatRange(scenario1Results.caseloadRange.low, scenario1Results.caseloadRange.high)} clients\n              </div>\n            </div>\n            <div className=\"bg-nesso-card rounded-xl ring-1 ring-black/5 p-6\">\n              <h3 className=\"text-sm font-medium text-nesso-ink/60 mb-2\">Revenue projection</h3>\n              <div className=\"text-3xl font-semibold text-nesso-navy\">\n                {formatCurrency(scenario1Results.revenueMonthly)}\n              </div>\n              <div className=\"text-sm text-nesso-ink/60\">per month</div>\n            </div>\n          </div>\n        </section>\n\n        {/* Assumptions Row */}\n        <section className=\"max-w-4xl mx-auto\">\n          <div className=\"bg-nesso-card rounded-xl ring-1 ring-black/5 p-6 space-y-4\">\n            <div className=\"flex items-start justify-between gap-4\">\n              <h3 className=\"text-base font-semibold text-nesso-navy\">Assumptions</h3>\n              <button\n                onClick={handleAdjustGoals}\n                className=\"px-4 py-2 text-sm rounded-lg border border-nesso-navy/20 text-nesso-navy hover:bg-nesso-navy/5 transition-colors focus:ring-2 focus:ring-nesso-navy/20\"\n                aria-label=\"Adjust your goals and return to planning page\"\n              >\n                Adjust goals\n              </button>\n            </div>\n\n            {/* Read-only summary */}\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3 text-sm\">\n              <div>\n                <span className=\"text-nesso-ink/60\">Income goal:</span>{' '}\n                <span className=\"font-medium text-nesso-navy\">{formatCurrency(planState.monthlyIncome)}/mo</span>\n              </div>\n              <div>\n                <span className=\"text-nesso-ink/60\">Session fee:</span>{' '}\n                <span className=\"font-medium text-nesso-navy\">{formatCurrency(planState.sessionFee)}</span>\n              </div>\n              <div>\n                <span className=\"text-nesso-ink/60\">Capacity:</span>{' '}\n                <span className=\"font-medium text-nesso-navy\">{capacityLabel}</span>\n              </div>\n            </div>\n\n            {/* Editable assumptions */}\n            <div className=\"pt-4 border-t border-nesso-navy/10\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"adminHours\" className=\"text-sm font-medium text-nesso-navy\">\n                    Admin time (h/week)\n                  </Label>\n                  <Input\n                    id=\"adminHours\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"20\"\n                    step=\"0.5\"\n                    value={planState.adminHours}\n                    onChange={(e) => updateAssumption({ adminHours: parseFloat(e.target.value) || 0 })}\n                    className=\"text-sm\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"docMinutes\" className=\"text-sm font-medium text-nesso-navy\">\n                    Documentation (min/client/week)\n                  </Label>\n                  <Input\n                    id=\"docMinutes\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"60\"\n                    step=\"5\"\n                    value={planState.documentationMinutesPerClient}\n                    onChange={(e) => updateAssumption({ documentationMinutesPerClient: parseFloat(e.target.value) || 0 })}\n                    className=\"text-sm\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"cancellationRate\" className=\"text-sm font-medium text-nesso-navy\">\n                    Cancellation rate (%)\n                  </Label>\n                  <Input\n                    id=\"cancellationRate\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"50\"\n                    step=\"1\"\n                    value={Math.round(planState.cancellationRate * 100)}\n                    onChange={(e) => updateAssumption({ cancellationRate: (parseFloat(e.target.value) || 0) / 100 })}\n                    className=\"text-sm\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Scenarios Panel */}\n        <section className=\"max-w-6xl mx-auto\">\n          <h2 className=\"text-2xl font-semibold text-nesso-navy mb-6\">Scenarios</h2>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Scenario 1: Your plan */}\n            <ScenarioCard\n              title=\"Your plan\"\n              results={scenario1Results}\n              onEmailClick={() => handleEmailScenario('scenario1')}\n            />\n\n            {/* Scenario 2: Raised fee */}\n            <ScenarioCard\n              title=\"Raised fee\"\n              results={scenario2Results}\n              showRaisedFeeAdvice={true}\n              onEmailClick={() => handleEmailScenario('scenario2')}\n            />\n          </div>\n\n          {/* Email full overview button */}\n          <div className=\"mt-8 flex justify-center\">\n            <button\n              onClick={() => handleEmailScenario('all')}\n              className=\"px-8 py-3 text-base rounded-xl border-2 border-nesso-coral text-nesso-navy hover:bg-nesso-coral/10 font-medium transition-colors focus:ring-2 focus:ring-nesso-coral\"\n            >\n              Email me the full overview\n            </button>\n          </div>\n        </section>\n      </main>\n\n      {/* Email Modal */}\n      {isEmailModalOpen && selectedScenario && (\n        <EmailCaptureModal\n          isOpen={isEmailModalOpen}\n          onClose={() => {\n            setIsEmailModalOpen(false);\n            setSelectedScenario(null);\n          }}\n          scenario={selectedScenario}\n          planState={planState}\n          scenario1Results={scenario1Results}\n          scenario2Results={scenario2Results}\n        />\n      )}\n    </div>\n  );\n}\n\n// Email Capture Modal Component\ninterface EmailCaptureModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  scenario: 'scenario1' | 'scenario2' | 'all';\n  planState: PlanState;\n  scenario1Results: any;\n  scenario2Results: any;\n}\n\nfunction EmailCaptureModal({ isOpen, onClose, scenario, planState, scenario1Results, scenario2Results }: EmailCaptureModalProps) {\n  const [email, setEmail] = useState('');\n  const [optIn, setOptIn] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    // Validate email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    // Simulate sending (for now, just collect the email)\n    // In the future, this would call an API endpoint\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Store email in localStorage for now (Vercel analytics can track this)\n    const emailData = {\n      email,\n      optIn,\n      scenario,\n      timestamp: new Date().toISOString(),\n      planState\n    };\n\n    try {\n      const existingEmails = JSON.parse(localStorage.getItem('caseload_emails') || '[]');\n      existingEmails.push(emailData);\n      localStorage.setItem('caseload_emails', JSON.stringify(existingEmails));\n    } catch (err) {\n      console.error('Failed to store email:', err);\n    }\n\n    setIsSubmitting(false);\n\n    // Show success toast (you can add a toast library later)\n    alert('Plan sent. Check your inbox!');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50\">\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-md w-full p-6 space-y-4\">\n        {/* Header */}\n        <div className=\"flex items-start justify-between\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-nesso-navy\">Send your caseload plan to your inbox</h2>\n            <p className=\"text-sm text-nesso-ink/60 mt-1\">\n              We&apos;ll email your plan summary. You can create a new plan anytime.\n            </p>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-nesso-ink/60 hover:text-nesso-navy transition-colors\"\n            aria-label=\"Close modal\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\" className=\"text-sm font-medium text-nesso-navy\">\n              Email address\n            </Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"you@example.com\"\n              required\n              className=\"w-full\"\n            />\n            {error && (\n              <p className=\"text-sm text-red-600\">{error}</p>\n            )}\n          </div>\n\n          <div className=\"flex items-start gap-2\">\n            <input\n              type=\"checkbox\"\n              id=\"optIn\"\n              checked={optIn}\n              onChange={(e) => setOptIn(e.target.checked)}\n              className=\"mt-1\"\n            />\n            <Label htmlFor=\"optIn\" className=\"text-sm text-nesso-ink/80 cursor-pointer\">\n              Send me my plan and keep me in the loop with helpful updates.\n            </Label>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"w-full px-6 py-3 rounded-xl bg-nesso-coral hover:bg-nesso-coral/90 text-black font-medium transition-colors focus:ring-2 focus:ring-nesso-coral disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {isSubmitting ? 'Sending...' : 'Email me my plan'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}